<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_entity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>firearm stats</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
//todo: replace this all with a .ini file at some point
//projectile array index 0=depth offset, 1=lateral offset, 2=rotational offset, 
var projectiles=0;
projectiles=push_array(projectiles, create_array(0,0,0));
/*
projectiles=push_array(projectiles, create_array(0,0,10));
projectiles=push_array(projectiles, create_array(0,0,-10));
projectiles=push_array(projectiles, create_array(0,0,20));
projectiles=push_array(projectiles, create_array(0,0,-20));*/

//Contains the list of sounds the firearm can make on shooting
var shootSounds = 0;
shootSounds=push_array(shootSounds, snd_pistolfire_1);
shootSounds=push_array(shootSounds, snd_pistolfire_2);
shootSounds=push_array(shootSounds, snd_pistolfire_3);

//index 0=name 1=display name, 2=damage, 3=projectiles per shot array, 
//4=no. of shots, 5=range, 6=spread modifier, 
//7=draw duration, 8=reload duration, 9=fire duration, 
//10=knockback, 11=penetration true/false, 12=projectile type, 
//13=explosion range, 14=sprite, 15=screenshake, 
//16=soundeffect, 17=inventory space, 18=selective fire true/false, 
//19= is long (true/false) , 20= bullet speed, 21=default no of ricochets
//22= sounds on shooting
firearmstats=0;
firearmstats=push_array(firearmstats,create_array(/*name*/'flintlock',/*display name*/'flintlock pistol',/*damage*/10,/*projectile array*/array_tostring(projectiles),/*no of shots*/1,/*range*/400,/*spread modifier*/1,/*draw duration*/room_speed/6,/*reload duration*/room_speed,/*fire duration*/room_speed/20,/*knockback*/0.7,/*penetration*/false,/*projectile*/obj_bullet,/*explosion range*/0,/*sprite*/spr_flintlock,/*screenshake*/10,/*sound effect*/snd_debugsound,/*required inventory space*/1,/*selective fire*/true,/*is long*/false, /*bullet speed*/60*(60/room_speed),/*ricochets*/0,/*firing sounds array*/array_tostring(shootSounds)) );



//musket
var projectiles=0;
projectiles=push_array(projectiles, create_array(0,0,0));


var shootSounds = 0;
shootSounds=push_array(shootSounds, snd_musketfire_1);
shootSounds=push_array(shootSounds, snd_musketfire_2);
shootSounds=push_array(shootSounds, snd_musketfire_3);

firearmstats=push_array(firearmstats,create_array(/*name*/'musket',/*display name*/'musket',/*damage*/40,/*projectile array*/array_tostring(projectiles),/*no of shots*/1,/*range*/1000,/*spread modifier*/1,/*draw duration*/room_speed/6,/*reload duration*/room_speed*2,/*fire duration*/room_speed/16,/*knockback*/0.7,/*penetration*/true,/*projectile*/obj_bullet,/*explosion range*/0,/*sprite*/spr_musket,/*screenshake*/20,/*sound effect*/snd_debugsound,/*required inventory space*/2,/*selective fire*/true,/*is long*/true, /*bullet speed*/15*(60/room_speed),/*ricochets*/0,/*firing sounds array*/array_tostring(shootSounds)) );



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
